#!/bin/sh
# Copyright 2014 Frank Pavageau
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

if [ $# = 0 ]; then
  echo "Usage: jtgrep [-i] [-v] PATTERN [FILE...]"
  echo "    -i Ignore case distinctions in the pattern"
  echo "    -v Invert the sense of matching, to select non-matching threads"
  exit 1
fi

IGNORECASE=0
INVERT=0

while getopts iv PARAM; do
  case $PARAM in
    i) IGNORECASE=1;;
    v) INVERT=1;;
  esac
done
shift $(($OPTIND - 1))

PATTERN=$1
shift

awk -v pattern=$PATTERN -v invert=$INVERT -v IGNORECASE=$IGNORECASE '
BEGIN {
  m = -1
  # Convert to a proper integer: the string "0" does not have the same meaning
  # as the integer 0 (i.e. it is true, not false).
  IGNORECASE = int(IGNORECASE)
}

# Print text blocks outside of a thread
/^[a-zA-Z0-9]/ {
  printThread()
  print
  m = -1 # Set the "outside of thread" context
}

# Print empty lines outside of a thread
m < 0 && /^$/ { print }

# Start a new thread
/^"/ {
  printThread()
  thread = ""
  m = 0
}

# Accumulate the lines for the current thread
m >= 0 {
  if (thread) { thread = thread "\n" $0 }
  else { thread = $0 }
}

# Try to match the current thread with the pattern
m == 0 && $0 ~ pattern { m = 1 }

END {
  printThread()
}

function printThread() {
  if ((!invert && m > 0) || (invert && m == 0)) {
    print thread
  }
}
' $@
